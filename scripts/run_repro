#!/usr/bin/env bash


SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

parentdir="$(dirname "$SCRIPT_DIR")"
sourcedir="$(dirname "$parentdir")"


DRIVER_PATH="$sourcedir/JQF/scripts/jqf-driver.sh"
JAR_PATH="$parentdir/build/libs/growe-1.0-SNAPSHOT-all.jar"

function log() {
  echo "$1" | tee -a "$LOGFILE"
}

print_usage() {
  echo "Usage: $0 INPUT_PATH"
}

# Check arguments
if [ $# -lt 1 ]; then
  print_usage >&1
  exit 1
fi

if [[ "${dir:0:1}" == / || "${dir:0:2}" == ~[/a-z] ]]
then
  path=$1
else
  path="$(pwd)/$1"
fi

corpus="$path/errorDir/corpus"
errordir="$path/errorDir"
echo $errordir

reprodir="$path/repro"
mkdir $reprodir
echo $reprodir
cd $reprodir

LOGFILE1="./repro_all.log"
LOGFILE2="./repro_valid.log"


export JVM_OPTS="$JVM_OPTS -Djqf.repro.traceDir=$errordir"

# Do not let GC mess with fuzzing
export JVM_OPTS="$JVM_OPTS -Djqf.repro.logUniqueBranches=true -Xmx7g"

if [[ $* == *"debug"* ]]; then
  export JVM_OPTS="$JVM_OPTS -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005"
fi
echo "======= run repro cov-all ======="
/usr/bin/env bash -c "$DRIVER_PATH --illegal-access=permit -jar $JAR_PATH -g repro -r $corpus ${*: 2} | tee -a $LOGFILE1 2>/dev/null | grep '^# Cov' | sort | uniq > ${errordir}/cov-all.log"


export JVM_OPTS="$JVM_OPTS -Djqf.repro.ignoreInvalidCoverage=true"
echo "======= run repro cov-valid ======="
/usr/bin/env bash -c "$DRIVER_PATH --illegal-access=permit -jar $JAR_PATH -g repro -r $corpus ${*: 2}  | tee -a $LOGFILE2 2>/dev/null | grep '^# Cov' | sort | uniq > ${errordir}/cov-valid.log"


rm -r work/
rm -r .nextflow/
rm -r generatedflows/
rm .nextflow.log*
